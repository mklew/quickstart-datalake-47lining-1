{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Data Lake Foundation is a QuickStart that provides a Data Lake architecture, Redshift cluster, Elasticsearch domain, Data Lake walk-through wizard running on AWS EC2 instance, in the same VPC through Cloudformation templates that provision and configure the required resources, including related QuickStarts. This template provisions all of the resources that are specific to the Quick Start.  Leveraged Quick Starts (VPC, LinuxBastion), if needed, can be provisioned by using the data-lake-foundation-master template. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.(qs-1nlkhq1o3)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "NAT1ElasticIP",
                        "NAT2ElasticIP"
                    ]
                },
                {
                    "Label": {
                        "default": "Demonstration Configuration"
                    },
                    "Parameters": [
                        "CreateDemonstration",
                        "WizardInstanceType",
                        "WizardUserName",
                        "WizardPassword",
                        "DatasetS3BucketName",
                        "DatasetS3KeyPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Elasticsearch Configuration"
                    },
                    "Parameters": [
                        "RemoteAccessCIDR",
                        "ElasticsearchNodeType",
                        "ElasticsearchNodeCount"
                    ]
                },
                {
                    "Label": {
                        "default": "Redshift Configuration"
                    },
                    "Parameters": [
                        "EnableRedshift",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftNumberOfNodes",
                        "RedshiftNodeType",
                        "RedshiftDatabaseName",
                        "RedshiftDatabasePort"
                    ]
                },
                {
                    "Label": {
                        "default": "Kinesis configuration"
                    },
                    "Parameters": [
                        "KinesisDataStreamName",
                        "KinesisDataStreamS3Prefix"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix",
                        "KeyPairName"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote Access CIDR"
                },
                "ElasticsearchNodeType": {
                    "default": "Elasticsearch Instance Type"
                },
                "ElasticsearchNodeCount": {
                    "default": "Elasticsearch Node Count"
                },
                "CreateDemonstration": {
                    "default": "Create demonstration"
                },
                "WizardInstanceType": {
                    "default": "Wizard Instance Type"
                },
                "WizardUserName": {
                    "default": "Wizard User Name"
                },
                "WizardPassword": {
                    "default": "Wizard Password"
                },
                "EnableRedshift": {
                    "default": "Enable Redshift"
                },
                "RedshiftUsername": {
                    "default": "Redshift User Name"
                },
                "RedshiftPassword": {
                    "default": "Redshift Password"
                },
                "RedshiftNumberOfNodes": {
                    "default": "Redshift Number of Nodes"
                },
                "RedshiftNodeType": {
                    "default": "Redshift Node Type"
                },
                "RedshiftDatabaseName": {
                    "default": "Redshift Database Name"
                },
                "RedshiftDatabasePort": {
                    "default": "Redshift Database Port"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "DatasetS3BucketName": {
                    "default": "Dataset S3 Bucket Name"
                },
                "DatasetS3KeyPrefix": {
                    "default": "Dataset S3 Key Prefix"
                },
                "PrivateSubnet1ID": {
                    "default": "Existing VPC Private Subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Existing VPC Private Subnet 2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Existing VPC Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Existing VPC Public Subnet 2 ID"
                },
                "NAT1ElasticIP": {
                    "default": "NAT 1 IP address"
                },
                "NAT2ElasticIP": {
                    "default": "NAT 2 IP address"
                },
                "VPCID": {
                    "default": "Existing VPC ID"
                },
                "VPCCIDR": {
                    "default": "Existing VPC CIDR"
                },
                "KinesisDataStreamName": {
                    "default": "Kinesis Data Stream Name"
                },
                "KinesisDataStreamS3Prefix": {
                    "default": "Kinesis Data Stream S3 Prefix"
                }
            }
        }
    },
    "Mappings": {
        "ConstantsMap": {
            "Constants": {
                "SnsLearnMoreTopicArn": "arn:aws:sns:us-east-1:777110527155:datalake-foundation-quickstart"
            }
        }
    },
    "Conditions": {
        "CreateDemoResources": {
            "Fn::Equals": [
                {
                    "Ref": "CreateDemonstration"
                },
                "yes"
            ]
        },
        "RedshiftPubliclyAccessible": {
            "Fn::Equals": [
                {
                    "Ref": "CreateDemonstration"
                },
                "yes"
            ]
        },
        "CreateRedshift": {
            "Fn::Or": [
                {
                    "Condition": "CreateDemoResources"
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "EnableRedshift"
                        },
                        "yes"
                    ]
                }
            ]
        },
        "CreateKinesisSampleStream": {
            "Fn::Equals": [
                {
                    "Ref": "CreateDemonstration"
                },
                "no"
            ]
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. You must specify two Availability Zones. By default, the Quick Start preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "CreateDemonstration": {
            "AllowedValues": [
                "yes",
                "no"
            ],
            "Default": "no",
            "Description": "Set this parameter to no if you donâ€™t want the Quick Start to deploy the data lake wizard and load sample data into the Amazon Redshift cluster and Kinesis streams. For more information about the wizard, see step 4. The following five parameters are used only if Create Demonstration is set to yes.",
            "Type": "String"
        },
        "DatasetS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Dataset bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart-datasets",
            "Description": "S3 bucket where the sample dataset is installed. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen. Use this parameter to specify the S3 bucket name that you would like the Quick Start to to load, if you decide to use a different dataset, or if you decide to customize or extend the Quick Start dataset. (For more information, see Using Your Own Dataset.) Keep the default setting to use the sample dataset included with the Quick Start.",
            "Type": "String"
        },
        "DatasetS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Dataset key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "quickstart-datalake-47lining/ecommco/v2",
            "Description": "S3 key prefix where the sample dataset is installed. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes, but should not start with a forward slash, which is automatically added. Use this parameter to specify the location for the dataset you would like the Quick Start to load, if you decide to use a different dataset, or if you decide to customize or extend the Quick Start dataset. (For more information, see Using Your Own Dataset.) Keep the default setting to use the sample dataset included with the Quick Start.",
            "Type": "String"
        },
        "ElasticsearchNodeCount": {
            "Default": "1",
            "Description": "The number of nodes in the Elasticsearch cluster. For guidance, see the Amazon ES documentation.",
            "Type": "Number"
        },
        "ElasticsearchNodeType": {
            "AllowedValues": [
                "t2.small.elasticsearch",
                "m4.large.elasticsearch",
                "m4.xlarge.elasticsearch",
                "c4.large.elasticsearch",
                "c4.xlarge.elasticsearch",
                "r4.large.elasticsearch",
                "r4.xlarge.elasticsearch"
            ],
            "ConstraintDescription": "must be a valid Elasticsearch node type.",
            "Default": "t2.small.elasticsearch",
            "Description": "EC2 instance type for the Elasticsearch cluster.",
            "Type": "String"
        },
        "EnableRedshift": {
            "AllowedValues": [
                "yes",
                "no"
            ],
            "Default": "yes",
            "Description": "Specifies whether Amazon Redshift will be provisioned when the Create Demonstration parameter is set to no.  This parameter is ignored when Create Demonstration is set to yes (in that case, Amazon Redshift is always provisioned).  Set to no if youâ€™ve set the Create Demonstration parameter to no, and you donâ€™t want to provision the Amazon Redshift cluster.",
            "Type": "String"
        },
        "WizardInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "t2.micro",
            "Description": "The EC2 instance type for the data lake wizard. Required only if Create Demonstration is set to \"yes\"",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "KinesisDataStreamName": {
            "Default": "streaming-submissions",
            "Description": "Name of the Kinesis data stream. Change this parameter only if youâ€™ve set the Create Demonstration parameter to no. Keep the default setting to use the sample dataset included with the Quick Start.",
            "Type": "String"
        },
        "KinesisDataStreamS3Prefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "Default": "streaming-submissions",
            "Description": "S3 key prefix for your streaming data stored in the S3 submissions bucket. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes, but should not start with a forward slash, which is automatically added. Use this parameter to specify the location for the streaming data youâ€™d like to load.  Change this parameter only if youâ€™ve set the Create Demonstration parameter to no. Keep the default setting to use the sample dataset included with the Quick Start.",
            "Type": "String"
        },
        "NAT1ElasticIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])",
            "Description": "Elastic IP address for the first NAT gateway instance that will be allowed access to Amazon ES.",
            "Type": "String"
        },
        "NAT2ElasticIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])",
            "Description": "Elastic IP address for the second NAT gateway instance that will be allowed access to Amazon ES.",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket where the Quick Start templates and scripts are installed. Use this parameter to specify the S3 bucket name youâ€™ve created for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "datalake/47lining/latest/",
            "Description": "S3 key prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Type": "String"
        },
        "RedshiftDatabaseName": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "ConstraintDescription": "must contain a-z or 0-9 only.",
            "Default": "quickstart",
            "Description": "The name of the first database to be created when the Amazon Redshift cluster is provisioned.",
            "Type": "String"
        },
        "RedshiftDatabasePort": {
            "Default": "5439",
            "Description": "The port that Amazon Redshift will listen on, which will be allowed through the security group.",
            "Type": "String"
        },
        "RedshiftNodeType": {
            "AllowedValues": [
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge",
                "dc1.large",
                "dc1.8xlarge",
                "ds1.xlarge",
                "ds1.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid Redshift node type.",
            "Default": "dc1.large",
            "Description": "Instance type for the nodes in the Amazon Redshift cluster.",
            "Type": "String"
        },
        "RedshiftNumberOfNodes": {
            "Default": "1",
            "Description": "The number of nodes in the Amazon Redshift cluster. If you specify a number thatâ€™s larger than 1, the Quick Start will launch a multi-node cluster.",
            "Type": "Number"
        },
        "RedshiftPassword": {
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!#$%&()*+,.:;<=>?\\[\\]^_`{|}~-]*$",
            "ConstraintDescription": "Password must contain 8 to 64 printable ASCII characters excluding: /, \", \\', \\ and @. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "Description": "The password that is associated with the master user account for the Amazon Redshift cluster. The password must contain 8 to 64 printable ASCII characters, excluding: /, \", \\', \\ and @. It must contain one uppercase letter, one lowercase letter, and one number.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "RedshiftUsername": {
            "AllowedPattern": "^[a-z][a-z0-9_]*$",
            "ConstraintDescription": "User name parameter must be lowercase, begin with a letter, contain only alphanumeric characters or underscores, and be less than 128 characters.",
            "Default": "datalake",
            "Description": "The user name that is associated with the master user account for the Amazon Redshift cluster. The user name must contain fewer than 128 alphanumeric characters or underscores, and must be lowercase and begin with a letter. ",
            "MaxLength": "128",
            "MinLength": "1",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to SSH into the bastion host instance and access Amazon ES. We recommend that you set this value to a trusted IP range. For example, you might want to grant only your corporate network access to the software. You can use http://checkip.amazonaws.com/  to check your IP address. This parameter must be in the form x.x.x.x/x (e.g., 96.127.8.12/32, YOUR_IP/32).",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the VPC.",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of your existing VPC (e.g., vpc-0343606e).",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WizardPassword": {
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[\\x00-\\x7F]*$",
            "ConstraintDescription": "Password must contain 8 to 64 ASCII characters. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "Description": "The password for the wizard, consisting of 8-64 ASCII characters. The password must contain one uppercase letter, one lowercase letter, and one number.  This password is required, but will only be used only when you launch the Quick Start with Create Demonstration set to \"yes\".",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "WizardUserName": {
            "AllowedPattern": "^[\\x00-\\x7F]*$",
            "ConstraintDescription": "User name must contain 1 to 64 ASCII characters.",
            "Default": "DataLakeUser",
            "Description": "The user name for the wizard. Consisting of 1-64 ASCII characters. Required only if Create Demonstration is set to \"yes\"",
            "MaxLength": "64",
            "MinLength": "1",
            "Type": "String"
        }
    },
    "Resources": {
        "BucketsStack": {
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/buckets.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "CopyDataStack": {
            "Condition": "CreateDemoResources",
            "DependsOn": [
                "ElasticsearchStack"
            ],
            "Properties": {
                "Parameters": {
                    "CopyDataRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.CopyDataRoleARN"
                        ]
                    },
                    "DatasetS3BucketName": {
                        "Ref": "DatasetS3BucketName"
                    },
                    "DatasetS3KeyPrefix": {
                        "Ref": "DatasetS3KeyPrefix"
                    },
                    "SubmissionsBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketName"
                        ]
                    },
                    "CuratedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedBucketName"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/copy-data.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "ElasticsearchStack": {
            "DependsOn": [],
            "Properties": {
                "Parameters": {
                    "CopyLambdaDeploymentRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.CopyLambdaDeploymentRoleARN"
                        ]
                    },
                    "ElasticsearchAccessIP": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "LambdaRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.LambdaRoleARN"
                        ]
                    },
                    "CuratedDatasetsARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedDatasetsARN"
                        ]
                    },
                    "CuratedTopicARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedTopicARN"
                        ]
                    },
                    "NAT1ElasticIP": {
                        "Ref": "NAT1ElasticIP"
                    },
                    "NAT2ElasticIP": {
                        "Ref": "NAT2ElasticIP"
                    },
                    "NodeCount": {
                        "Ref": "ElasticsearchNodeCount"
                    },
                    "NodeType": {
                        "Ref": "ElasticsearchNodeType"
                    },
                    "PublishedDataARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.PublishedDataARN"
                        ]
                    },
                    "PublishedTopicARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.PublishedTopicARN"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RegionalLambdaBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.RegionalLambdaBucketName"
                        ]
                    },
                    "SubmissionsBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketARN"
                        ]
                    },
                    "SubmissionsTopicARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsTopicARN"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/elasticsearch.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "EmptyBucketsStack": {
            "DependsOn": [],
            "Properties": {
                "Parameters": {
                    "CreateDemonstration": {
                        "Ref": "CreateDemonstration"
                    },
                    "EmptyBucketsRoleARN": {
                        "Fn::If": [
                            "CreateDemoResources",
                            {
                                "Fn::GetAtt": [
                                    "IAMRolesStack",
                                    "Outputs.EmptyBucketsRoleARN"
                                ]
                            },
                            ""
                        ]
                    },
                    "CuratedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedBucketName"
                        ]
                    },
                    "PublishedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.PublishedBucketName"
                        ]
                    },
                    "SubmissionsBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketName"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/empty-buckets.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "IAMRolesStack": {
            "Properties": {
                "Parameters": {
                    "AthenaQueryResultsBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.AthenaQueryResultsBucketARN"
                        ]
                    },
                    "CreateDemonstration": {
                        "Ref": "CreateDemonstration"
                    },
                    "DatasetS3BucketName": {
                        "Ref": "DatasetS3BucketName"
                    },
                    "EnableRedshift": {
                        "Ref": "EnableRedshift"
                    },
                    "CuratedDatasetsARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedDatasetsARN"
                        ]
                    },
                    "PublishedDataARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.PublishedDataARN"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "RegionalLambdaBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.RegionalLambdaBucketARN"
                        ]
                    },
                    "SnsLearnMoreTopicArn": {
                        "Fn::FindInMap": [
                            "ConstantsMap",
                            "Constants",
                            "SnsLearnMoreTopicArn"
                        ]
                    },
                    "SubmissionsBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketARN"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/iam-roles.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "KinesisDemonstrationStack": {
            "Condition": "CreateDemoResources",
            "DependsOn": [
                "EmptyBucketsStack"
            ],
            "Properties": {
                "Parameters": {
                    "ElasticsearchAccessARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.ElasticsearchAccessARN"
                        ]
                    },
                    "ElasticsearchDomainARN": {
                        "Fn::GetAtt": [
                            "ElasticsearchStack",
                            "Outputs.ElasticsearchDomainARN"
                        ]
                    },
                    "CuratedBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedDatasetsARN"
                        ]
                    },
                    "CuratedBucketAccessARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.CuratedBucketAccessARN"
                        ]
                    },
                    "RedshiftConnectionURL": {
                        "Fn::GetAtt": [
                            "RedshiftStack",
                            "Outputs.ConnectionURL"
                        ]
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "SubmissionsBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketARN"
                        ]
                    },
                    "SubmissionsBucketAccessARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.SubmissionsBucketAccessARN"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/kinesis-demonstration.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "KinesisSampleStack": {
            "Condition": "CreateKinesisSampleStream",
            "Properties": {
                "Parameters": {
                    "KinesisStreamBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketName"
                        ]
                    },
                    "KinesisStreamBucketRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.KinesisStreamBucketRoleARN"
                        ]
                    },
                    "KinesisStreamKeyPrefix": {
                        "Ref": "KinesisDataStreamS3Prefix"
                    },
                    "KinesisStreamName": {
                        "Ref": "KinesisDataStreamName"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/kinesis.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "RedshiftStack": {
            "Condition": "CreateRedshift",
            "DependsOn": [],
            "Properties": {
                "Parameters": {
                    "DatabaseName": {
                        "Ref": "RedshiftDatabaseName"
                    },
                    "DatabasePort": {
                        "Ref": "RedshiftDatabasePort"
                    },
                    "NodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "NumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "PubliclyAccessible": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            "true",
                            "false"
                        ]
                    },
                    "QSRedshiftRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.QSRedshiftRoleARN"
                        ]
                    },
                    "RedshiftInboundCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "SubnetId1": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            {
                                "Ref": "PublicSubnet1ID"
                            },
                            {
                                "Ref": "PrivateSubnet1ID"
                            }
                        ]
                    },
                    "SubnetId2": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            {
                                "Ref": "PublicSubnet2ID"
                            },
                            {
                                "Ref": "PrivateSubnet2ID"
                            }
                        ]
                    },
                    "VpcId": {
                        "Ref": "VPCID"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/redshift.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "RegisterKibanaMetadataDashboardLambda": {
            "DependsOn": [],
            "Properties": {
                "Parameters": {
                    "ElasticsearchEndpoint": {
                        "Fn::GetAtt": [
                            "ElasticsearchStack",
                            "Outputs.ElasticsearchEndpoint"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RegionalLambdaBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.RegionalLambdaBucketName"
                        ]
                    },
                    "RegisterDashboardRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.RegisterKibanaDashboardRoleARN"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/register-dashboard.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "WebAppStack": {
            "Condition": "CreateDemoResources",
            "DependsOn": [
                "CopyDataStack"
            ],
            "Properties": {
                "Parameters": {
                    "ApplicationPassword": {
                        "Ref": "WizardPassword"
                    },
                    "ApplicationUsername": {
                        "Ref": "WizardUserName"
                    },
                    "AthenaQueryResultsBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.AthenaQueryResultsBucketName"
                        ]
                    },
                    "CleanOrdersStreamARN": {
                        "Fn::GetAtt": [
                            "KinesisDemonstrationStack",
                            "Outputs.CleanOrdersStreamARN"
                        ]
                    },
                    "CleanupResourcesRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.CleanupResourcesRoleARN"
                        ]
                    },
                    "DatasetS3BucketName": {
                        "Ref": "DatasetS3BucketName"
                    },
                    "DatasetS3KeyPrefix": {
                        "Ref": "DatasetS3KeyPrefix"
                    },
                    "ElasticsearchEndpoint": {
                        "Fn::GetAtt": [
                            "ElasticsearchStack",
                            "Outputs.ElasticsearchEndpoint"
                        ]
                    },
                    "InstanceProfileName": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.InstanceProfileName"
                        ]
                    },
                    "WizardInstanceType": {
                        "Ref": "WizardInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "KibanaURL": {
                        "Fn::GetAtt": [
                            "ElasticsearchStack",
                            "Outputs.KibanaURL"
                        ]
                    },
                    "KinesisAnalyticsRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.AnalyticsAccessARN"
                        ]
                    },
                    "CuratedBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedDatasetsARN"
                        ]
                    },
                    "CuratedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedBucketName"
                        ]
                    },
                    "NumWebServerInstances": 1,
                    "OrdersStreamARN": {
                        "Fn::GetAtt": [
                            "KinesisDemonstrationStack",
                            "Outputs.OrdersStreamARN"
                        ]
                    },
                    "OrdersStreamName": {
                        "Fn::GetAtt": [
                            "KinesisDemonstrationStack",
                            "Outputs.OrdersStreamName"
                        ]
                    },
                    "PrivateSubnet1ID": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "PrivateSubnet2ID": {
                        "Ref": "PrivateSubnet2ID"
                    },
                    "PublicSubnet1ID": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "PublicSubnet2ID": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "PublishedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.PublishedBucketName"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RedshiftConnectionURL": {
                        "Fn::GetAtt": [
                            "RedshiftStack",
                            "Outputs.ConnectionURL"
                        ]
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.QSRedshiftRoleARN"
                        ]
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "RevenueByStateStreamARN": {
                        "Fn::GetAtt": [
                            "KinesisDemonstrationStack",
                            "Outputs.RevenueByStateStreamARN"
                        ]
                    },
                    "SnsLearnMoreTopicArn": {
                        "Fn::FindInMap": [
                            "ConstantsMap",
                            "Constants",
                            "SnsLearnMoreTopicArn"
                        ]
                    },
                    "SubmissionsBucketARN": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketARN"
                        ]
                    },
                    "SubmissionsBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketName"
                        ]
                    },
                    "TopSKUStreamARN": {
                        "Fn::GetAtt": [
                            "KinesisDemonstrationStack",
                            "Outputs.TopSKUStreamARN"
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "VpcId": {
                        "Ref": "VPCID"
                    },
                    "CuratedDatasetsDatabaseName": {
                        "Fn::GetAtt": [
                            "GlueStack",
                            "Outputs.CuratedDatasetsDatabaseName"
                        ]
                    },
                    "CuratedDatasetsCrawlerName": {
                        "Fn::GetAtt": [
                            "GlueStack",
                            "Outputs.CuratedDatasetsCrawlerName"
                        ]
                    },
                    "CuratedDatasetsJobName": {
                        "Fn::GetAtt": [
                            "GlueStack",
                            "Outputs.CuratedDatasetsJobName"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/web-app.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "GlueStack": {
            "Condition": "CreateDemoResources",
            "Properties": {
                "Parameters": {
                    "AWSGlueCuratedDatasetsCrawlerRoleName": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.AWSGlueCuratedDatasetsCrawlerRoleName"
                        ]
                    },
                    "AWSGlueJobRoleName": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.AWSGlueJobRoleName"
                        ]
                    },
                    "SubmissionsBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.SubmissionsBucketName"
                        ]
                    },
                    "CuratedBucketName": {
                        "Fn::GetAtt": [
                            "BucketsStack",
                            "Outputs.CuratedBucketName"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/glue.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        }
    },
    "Outputs": {
        "DataLakeWizardURL": {
            "Description": "Data Lake Wizard URL",
            "Condition": "CreateDemoResources",
            "Value": {
                "Fn::GetAtt": [
                    "WebAppStack",
                    "Outputs.URL"
                ]
            }
        },
        "SubmissionsBucketName": {
            "Description": "Bucket name for submissions",
            "Value": {
                "Fn::GetAtt": [
                    "BucketsStack",
                    "Outputs.SubmissionsBucketName"
                ]
            }
        },
        "CuratedBucketName": {
            "Description": "Bucked name for Curated Datasets",
            "Value": {
                "Fn::GetAtt": [
                    "BucketsStack",
                    "Outputs.CuratedBucketName"
                ]
            }
        },
        "PublishedBucketName": {
            "Description": "Bucket name for Published Data",
            "Value": {
                "Fn::GetAtt": [
                    "BucketsStack",
                    "Outputs.PublishedBucketName"
                ]
            }
        },
        "RedshiftJDBCEndpoint": {
            "Description": "Redshift JDBC Endpoint",
            "Condition": "CreateRedshift",
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftStack",
                    "Outputs.ConnectionURL"
                ]
            }
        },
        "ElasticsearchEndpoint": {
            "Description": "Elasticsearch endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "ElasticsearchStack",
                    "Outputs.ElasticsearchEndpoint"
                ]
            }
        },
        "KinesisDataStreamName": {
            "Description": "KinesisDataStreamName",
            "Condition": "CreateKinesisSampleStream",
            "Value": {
                "Fn::GetAtt": [
                    "KinesisSampleStack",
                    "Outputs.KinesisDataStreamName"
                ]
            }
        }
    }
}